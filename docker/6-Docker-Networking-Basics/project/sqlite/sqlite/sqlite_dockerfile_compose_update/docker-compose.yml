services:
  sqlite-db:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SQLITEVER: sqlite3
        USER_ID: 1010
        USER_NAME: sqlituser
        GROUP_ID: 1010
        GROUP_NAME: sqlitegroup
        APP_ENV: production
        BASH_SHELL: /bin/bash
        APP_DIR: /data
        MOUNT1: /data/datas
        MOUNT2: /data/logs
        db_file: /data/mydb.db

    container_name: my-sqlite-project
    hostname: sqlite-project

    labels:
      - "maintainer=farajassulai@gmail.com"
      - "app=database"
      - "type=sqlite"

    environment:
      SQLITE_VER: sqlite3
      USER_ID: "1010"
      USER_NAME: sqlituser
      GROUP_ID: "1010"
      GROUP_NAME: sqlitegroup
      APP_ENV: production
      BASH_SHELL: /bin/bash
      APP_DIR: /data
      MOUNT1: /data/datas
      MOUNT2: /data/logs
      db_dir: /data/mydb.db
      BACKEND_HOST: database
      TZ: GMT+2

    networks:
      - my-sqlite-network

    dns:
      - 1.1.1.1
      - 8.8.8.8

    # Removed ports - SQLite doesn't need network ports
    # ports:
    #   - "8080:8080"

    volumes:
      # Read-write volumes for SQLite database and logs
      - sqlite_data:/data:rw
      - sqlite_logs:/data/logs:rw
      # Alternative: host bind mounts (ensure directories exist)
      # - ./data/datas:/data/datas:rw
      # - ./data/logs:/data/logs:rw

    # Removed nginx-specific tmpfs mounts
    # tmpfs:
    #   - /tmp:rw,size=50m,mode=1777

    # Resource limits - using deploy syntax for modern compose
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.25"
        reservations:
          memory: 256M

    ulimits:
      nofile:
        soft: 1024
        hard: 4096
      nproc:
        soft: 512
        hard: 1024

    # Fixed healthcheck for SQLite
    healthcheck:
      test: ["CMD", "test", "-f", "/data/mydb.db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"

    security_opt:
      - "no-new-privileges:true"

    # Minimal capabilities for SQLite
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE

    # Remove read-only restriction for database functionality
    # read_only: true
    tmpfs:
      - /tmp:rw,size=10m,mode=1777

    # Run as non-privileged user
    user: "1010:1010"

    # Container restart policy
    restart: unless-stopped

    # Fixed working directory to match Dockerfile
    working_dir: /data

# Define named volumes
volumes:
  sqlite_data:
    driver: local
  sqlite_logs:
    driver: local

networks:
  my-sqlite-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.18.0/24
