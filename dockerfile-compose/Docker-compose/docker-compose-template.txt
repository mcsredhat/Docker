version: '3.8'

services:
  app:
    # Image specification
    image: <image_name>
    
    # Container identification
    container_name: <container_name>
    hostname: <hostname>
    
    # Labels for metadata
    labels:
      - "app=<app_name>"
      - "environment=<environment>"
    
    # Execution options
    working_dir: <working_directory>
    entrypoint: <entrypoint_script>
    
    # Environment variables
    environment:
      - BACKEND_HOST=<backend_host>
      - TZ=<timezone>
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: <memory_limit>
          cpus: '<cpu_limit>'
        reservations:
          pids: <pids_limit>
    
    # Ulimits configuration
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 4096
        hard: 4096
    
    # Network configuration
    networks:
      <network_name>:
        aliases:
          - <alias>
        ipv4_address: <ip_address>
    
    # DNS configuration
    dns:
      - <dns1>
      - <dns2>
    
    # Port mapping
    ports:
      - "<host_port>:<container_port>"
    
    # Volume mounts
    volumes:
      - <host_path1>:<container_path1>:<mode>
      - <host_path2>:<container_path2>:<mode>
      # Required for read-only containers - writable temp space
      - <host_temp_path>:/tmp
    
    # Tmpfs mounts - Generic (customize based on your application)
    tmpfs:
      - /tmp:rw,size=50m
      - /var/tmp:rw,size=50m
      - /run:rw,size=10m
      # Tmpfs mounts - Nginx specific (uncomment if using Nginx)
      # - /var/log/nginx:size=50m,mode=1777
      # - /var/cache/nginx:size=100m,mode=1777
      # - /var/cache/nginx/client_temp:size=10m,mode=1777
      # - /var/cache/nginx/proxy_temp:size=10m,mode=1777
      # - /var/cache/nginx/fastcgi_temp:size=10m,mode=1777
      # - /var/cache/nginx/uwsgi_temp:size=10m,mode=1777
      # - /var/cache/nginx/scgi_temp:size=10m,mode=1777
    
    # Security configuration
    user: "<uid>:<gid>"
    read_only: true
    cap_drop:
      - ALL
    # Add only the capabilities you actually need:
    # cap_add:
    #   - NET_BIND_SERVICE  # Only if binding to ports < 1024
    #   - CHOWN            # Only if app needs to change file ownership
    #   - SETGID           # Only if app needs to change group ID
    #   - SETUID           # Only if app needs to change user ID
    security_opt:
      - no-new-privileges:true
      # - apparmor=<profile>  # Uncomment if using AppArmor
      # - seccomp=<profile>   # Uncomment if using custom seccomp
    # privileged: true  # AVOID: Only use if absolutely necessary
    
    # Restart policy
    restart: unless-stopped
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "<health_command>"]
      interval: <interval>
      timeout: <timeout>
      retries: <retries>
      start_period: <start_period>
      # disable: true  # Uncomment to disable inherited healthcheck
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "<log_size>"
        max-file: "<log_file_count>"
        compress: "true"
        # Alternative logging drivers:
        # driver: syslog
        # driver: journald
        # driver: fluentd
        # fluentd-address: <fluentd_host:port>

# Network definition
networks:
  <network_name>:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: <subnet_range>  # e.g., 172.20.0.0/16

# Example of a secure production configuration
# Uncomment and modify as needed:
#
# services:
#   secure-app:
#     image: myapp:latest
#     container_name: secure-app
#     user: "1001:1001"
#     read_only: true
#     cap_drop:
#       - ALL
#     security_opt:
#       - no-new-privileges:true
#     deploy:
#       resources:
#         limits:
#           memory: 512m
#           cpus: '0.5'
#     restart: unless-stopped
#     volumes:
#       - /host/logs:/app/logs
#     tmpfs:
#       - /tmp:size=100m